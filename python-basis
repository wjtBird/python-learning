    Mac 自行安装了python库，打开terminal端口，输入python直接进入python命令模式，退出使用quit( )或exit（ ）。
    Python 为动态的解释型语言，声明变量时不需要明确数据类型（例如：java 声明对象时必须要先声明数据类型 int a=1），pytho声明对象：a=1。

python文件格式以.py结尾的文件，在python命令行下直接输入python fileName.py 直接可以运行python文件。
注意：⚠️如果需要直接运行python文件，则需要在文件头指定python解释器“#!/usr/bin/env python2.7”(在Linux 和Unix 系统生效)，之后在对文件赋予执行权限 chmod a+x fileName.py。
在不需要进入python命令行窗口，直接输入./fileName.py后，可以直接执行python文件。指定编码格式“#-*- coding:utf-8 -*-”。

python格式化：
    python中，采用与C语言一致的格式化方式，用%实现，举例如下：
>>> 'Hello, %s' % 'world'
'Hello, world'
>>> 'Hi, %s, you have $%d.' % ('Michael', 1000000)
'Hi, Michael, you have $1000000.’

常见的占位符有：
%d 
整数 
%f 
浮点数 
%s 
字符串 
%x 
十六进制整数 

其中格式化整数和浮点数可以指定是否补0与小数位数
>>> '%2d-%02d' % (3, 1)
' 3-01'
>>> '%.2f' % 3.1415926
‘3.14'

字符串中如果需要显示%，则使用%%来表示一个%。

python数据类型：
1.     整数
2.     浮点数
3.     字符串：‘...’、”...”、”’…’"，在python中单引号和双引号表示相同意思，如果需要单引号和双引号混用则需要使用转义符’\’。三引号表示如果引号中有回车换行则解释器在解释时会自动在末尾加入换行符。
4.     布尔值：False、True
5.     空值：None

注意：⚠️python除法有两种方式 
1.      ／正常除法，两个整数相除结果为整数直接舍去小数部分，整数和浮点数相除结果为浮点数
2.     ／／直接取整除法，结果为直接舍去小数部分取整数。

python数据结构：
    list：可变顺序表，起始下标为0。声明：list=[a,2,b,c]，使用len(list)函数可以获取顺序表list的长度。取值list[0],取第一位；list[-1]，取最后一位。
    顺序表的方法：
        增加，append（content）
        插入，insert（index，content）
        删除，pop（）直接删除末尾位置的内容，并将删除内容返回；pop（index）指定删除位置。

    tuple：定长顺序表，起始下标为0。声明：tuple=(1,2,3),如果元素内容只有一个时需使用特殊的声明方式tupleSpecial=（1，）在元素后加上一个逗号“,”。取值tuple[0],取第一位;tuple[-1]，取最后一位。




python 循环：

python函数：

print()输出函数
    1、print+空格+输出内容
    2、print（）
    建议使用第二种print函数，使得语义更加的清晰。
    print（''）输出单引号中的字符串内容。
    print（10+20）print函数也可以将需要计算的内容直接写在括号中，输出计算后的结果。
    print（'a’,'b'）多个字符用逗号’，’隔开，输出的结果为a b逗号变为空格。

print()输入函数
    name=input()，无提示的输入一串字符串回车结束输入，把输入的字符串赋值给name变量。
    name=input(‘please enter your name: ‘)，提示语’please enter your name: ‘，提示后输入字符串回车结束输入，把输入的字符串赋值给name变量。


ord()获取字符的整数表示
chr() 把编码转为对应的字符
>>> ord('A')
65
>>> ord('中')
20013
>>> chr(66)
'B'
>>> chr(25991)
'文'
bytes类型的数据用带b前缀的单引号或双引号表示：
x = b’ABC'

encode()可以把字符转换为指定的编码格式的bytes
>>> 'ABC'.encode('ascii')
b'ABC'
>>> '中文'.encode('utf-8')
b'\xe4\xb8\xad\xe6\x96\x87'

len()计算字符数长度，如果换成bytes则计算字节数
>>> len('ABC')
3
>>> len('中文')
2
>>> len(b'ABC')
3
>>> len(b'\xe4\xb8\xad\xe6\x96\x87')
6
>>> len('中文'.encode('utf-8'))
6



